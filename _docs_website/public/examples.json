{
    "array": "var person_with_pseudonyms = {\n    id: {\n        chance: 'guid'\n    },\n    real_name: {\n        faker: \"name.firstName\"\n    },\n    pseudonyms:   [{\n            faker: 'name.firstName',\n            length: 10,\n            fixedLength: true\n    }]    \n};\n\nmocker()\n    .schema('person_with_pseudonyms', person_with_pseudonyms, 5)\n",
    "condition": "var conditional = {\n    condition: {\n        faker: 'helpers.randomize([\"email\", \"user\"])'\n    },\n    'object.condition===\"email\",show': {\n        static: 'email'\n    },\n    'object.condition===\"user\",show': {\n        static: 'user'\n    },\n    'object.condition===\"email\",email': {\n        hasOne: 'emails'\n    },\n    'object.condition===\"user\",user': {\n        hasOne: 'users'\n    }\n}\n\nvar user = {faker: 'name.findName'}\nvar email = {faker: 'internet.email'}\n\nmocker()\n    .schema('users', user, 2)\n    .schema('emails', email, 2)\n    .schema('situation', conditional, {min:2, max: 5})\n",
    "initial": "var cat = {\n    id: {\n        chance: 'guid'\n    },\n    age: {\n        faker: 'random.number({\"min\": 1, \"max\": 17})'\n    },\n    country: {\n        casual: 'country'\n    },\n    favorite_greeting: {\n        randexp: /feed (me|you and me|he and me|she and me)/\n    },\n    name: {\n        values: ['txuri', 'pitxi', 'kitty', 'obi']\n    }\n};\n\nmocker()\n    .schema('cats', cat, 1)\n",
    "unique": "var user = {\n    id: {\n        chance: 'guid'\n    },\n    name: {\n        faker: 'name.findName'\n    },\n    email: {\n        faker: 'internet.email'\n    }\n};\nvar house = {\n    id: {\n        chance: 'guid'\n    },\n    address: {\n        faker: 'address.streetAddress'\n    },\n    householder: {\n        hasOne: 'users'\n    },\n    mateIds: {\n        hasMany: 'users',\n        max: 2,\n        min: 2,\n        unique: true\n    }\n};\n\nmocker()\n    .schema('users', user, 3)\n    .schema('houses', house, 1)\n",
    "virtuals": "var model = {\n    exampleVirtual: {\n        incrementalId: 0,\n        virtual: true\n    },\n\n    id: {\n        function: function() {\n            return this.object.exampleVirtual\n        }\n    }\n}\n\nmocker()\n    .schema('situation', model, 3)\n",
    "withDB": "var user = {\n    id: {\n        chance: 'guid'\n    },\n    name: {\n        faker: 'name.findName'\n    },\n    email: {\n        faker: 'internet.email'\n    }\n};\nvar house = {\n    id: {\n        chance: 'guid'\n    },\n    address: {\n        faker: 'address.streetAddress'\n    },\n    householder: {\n        hasOne: 'users'\n    },\n    mateIds: {\n        hasMany: 'users',\n        max: 3,\n        min: 1,\n        get: 'id'\n    }\n};\n\nmocker()\n    .schema('users', user, 3)\n    .schema('houses', house, 1)\n",
    "withSeed": "var seedCats = [{\n    \"id\": \"bde09c8b-7d66-5818-a5bd-d46d780e7256\",\n    \"age\": 32,\n    \"country\": \"Vietnam\",\n    \"favorite_greeting\": \"feed you and me\",\n    \"name\": \"kitty bond\"\n}]\n\n\n\nvar cat = {\n    id: {\n        chance: 'guid'\n    },\n    age: {\n        faker: 'random.number({\"min\": 1, \"max\": 17})'\n    },\n    country: {\n        casual: 'country'\n    },\n    favorite_greeting: {\n        randexp: /feed (me|you and me|he and me|she and me)/\n    },\n    name: {\n        values: ['txuri', 'pitxi', 'kitty', 'obi']\n    }\n};\n\nmocker()\n    .seed('cats', seedCats)\n    .schema('cats', cat, 1)\n"
}